#Processed by Id: euler.yap 8028 2015-05-07 09:13:19Z josd
#eye data.ttl inference_rule.n3 --query query_rule-v2.n3q

PREFIX schema: <http://schema.org/>
PREFIX func: <http://www.w3.org/2007/rif-builtin-function#>
PREFIX omop: <http://www.salusproject.eu/ontology/omop#>
PREFIX e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>
PREFIX r: <http://www.w3.org/2000/10/swap/reason#>

[ a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:component <#lemma2>;
  r:component <#lemma3>;
  r:gives {
    <htttp://example.org/Patient/1> omop:gender_source_value "Male".
    <htttp://example.org/Patient/2> omop:gender_source_value "Male".
    <htttp://example.org/Patient/1> omop:yearOfBirth 1960 .
    <htttp://example.org/Patient/1> omop:monthOfBirth 2 .
  }].

<#lemma1> a r:Inference; r:gives {<htttp://example.org/Patient/1> omop:gender_source_value "Male"}; r:evidence (
  <#lemma4>);
  r:rule <#lemma5>.

<#lemma2> a r:Inference; r:gives {<htttp://example.org/Patient/2> omop:gender_source_value "Male"}; r:evidence (
  <#lemma6>);
  r:rule <#lemma5>.

<#lemma3> a r:Inference; r:gives {<htttp://example.org/Patient/1> omop:yearOfBirth 1960 .
  <htttp://example.org/Patient/1> omop:monthOfBirth 2}; r:evidence (
  <#lemma7>
  [ a r:Fact; r:gives {((<file:///d:/omop-conversion/data.ttl> <file:///d:/omop-conversion/inference_rule.n3>) 1) e:optional {<htttp://example.org/Patient/1> omop:monthOfBirth 2}}]);
  r:rule <#lemma8>.

<#lemma4> a r:Inference; r:gives {<htttp://example.org/Patient/1> omop:gender_source_value "Male"}; r:evidence (
  <#lemma9>);
  r:rule <#lemma10>.

<#lemma5> a r:Extraction; r:gives {{?x0 omop:gender_source_value ?x1} => {?x0 omop:gender_source_value ?x1}};
  r:because [ a r:Parsing; r:source <file:///d:/omop-conversion/query_rule-v2.n3q>].

<#lemma6> a r:Inference; r:gives {<htttp://example.org/Patient/2> omop:gender_source_value "Male"}; r:evidence (
  <#lemma11>);
  r:rule <#lemma10>.

<#lemma7> a r:Inference; r:gives {<htttp://example.org/Patient/1> omop:yearOfBirth 1960 .
  <htttp://example.org/Patient/1> omop:monthOfBirth 2}; r:evidence (
  <#lemma12>
  [ a r:Fact; r:gives {("1960-02-20T00:00:00+01:00"^^<http://www.w3.org/2001/XMLSchema#dateTime>) func:year-from-dateTime 1960}]
  [ a r:Fact; r:gives {("1960-02-20T00:00:00+01:00"^^<http://www.w3.org/2001/XMLSchema#dateTime>) func:month-from-dateTime 2}]);
  r:rule <#lemma13>.

<#lemma8> a r:Extraction; r:gives {{?x0 omop:yearOfBirth ?x1.
  ?x2 e:optional {?x0 omop:monthOfBirth ?x3}} => {?x0 omop:yearOfBirth ?x1.
  ?x0 omop:monthOfBirth ?x3}};
  r:because [ a r:Parsing; r:source <file:///d:/omop-conversion/query_rule-v2.n3q>].

<#lemma9> a r:Extraction; r:gives {<htttp://example.org/Patient/1> <http://schema.org/gender> "Male"};
  r:because [ a r:Parsing; r:source <file:///d:/omop-conversion/data.ttl>].

<#lemma10> a r:Extraction; r:gives {{?x0 <http://schema.org/gender> ?x1} => {?x0 omop:gender_source_value ?x1}};
  r:because [ a r:Parsing; r:source <file:///d:/omop-conversion/inference_rule.n3>].

<#lemma11> a r:Extraction; r:gives {<htttp://example.org/Patient/2> <http://schema.org/gender> "Male"};
  r:because [ a r:Parsing; r:source <file:///d:/omop-conversion/data.ttl>].

<#lemma12> a r:Extraction; r:gives {<htttp://example.org/Patient/1> <http://schema.org/birthDate> "1960-02-20T00:00:00+01:00"^^<http://www.w3.org/2001/XMLSchema#dateTime>};
  r:because [ a r:Parsing; r:source <file:///d:/omop-conversion/data.ttl>].

<#lemma13> a r:Extraction; r:gives {{?x0 <http://schema.org/birthDate> ?x1.
  (?x1) func:year-from-dateTime ?x2.
  (?x1) func:month-from-dateTime ?x3} => {?x0 omop:yearOfBirth ?x2.
  ?x0 omop:monthOfBirth ?x3}};
  r:because [ a r:Parsing; r:source <file:///d:/omop-conversion/inference_rule.n3>].

#ENDS 0.150 [sec] IO=7/4 TC=6 TP=22 BC=0 BP=0 PM=0 CM=0 FM=0 AM=0

